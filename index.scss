$desktop: 992px;
$desktop50: 992*2px;
$medium: 768px;

@mixin desktop {
    @media (min-width: $medium) {
        @content;
    }
}

@mixin standard {
    @media (min-width: $desktop) {
        @content;
    }
}

* {
    // margin: 0;
    padding: 0;
    box-sizing: border-box;
}

.px-0 {
    padding-left: 0px;
    padding-right: 0px;
}

.text-center {
    text-align: center;
}

.icon-md {
    font-size: 2rem;
}


html {
    max-width: 100vw;
    min-height: 100%;
    width: 100%;
}

body {
    position: relative;

    height: 100%;
    background: ghostwhite;

    //these two things are important for mobile margin
    margin: 0 0.5rem;
    // width: 100%;

}




.flex-column {
    display: flex;
    flex-direction: column;
}


@mixin nox {
    padding: 0;
    // border: none;
    margin: 0;
}


$navbar-height: 75px;
$navbar-mobile: 150px;


#main {
    position: relative;
    width: 100%;
    padding-top: $navbar-mobile;

    @include desktop {
        padding-top: $navbar-height;

    }
}

.container {
    //Make the container try to take the full width (width: 100%)
    //but if it's too big (max-width: 1000px)
    //add horizontal margins to it
    max-width: 1000px;
    width: 100%;
    margin: 0 auto;
}


header#header.nav {

    //With wrap, we can dynamically decide
    // if we stack or not to allow 100% width
    flex-wrap: wrap;

    // //Takes care about style
    text-align: center; //also affects images
    display: flex;
    // flex-direction: column;

    align-items: center;
    // justify-content: space-around;
    min-height: $navbar-height;
    max-height: $navbar-mobile;

    padding: 0 20px;

    // //Takes care of fixed positioning
    position: fixed;
    top: 0;
    left: 0;
    background: hsl(148, 100%, 20%);
    background: ghostwhite;
    width: 100%;
    z-index: 10;

    @include desktop {
        height: $navbar-height;
        flex-wrap: nowrap;
        // flex-direction: row;

        // #mobile-menu {
        //     display: none;
        // }
    }

    #logo {
        width: 100%;
        margin-top: 15px;
        position: relative; //

        @include desktop {
            width: 60vw;
            margin: 0px; //No margins since everything is fixed by flex layout
        }

    }

    img#brand-logo {
        //     // padding: 5px 0px;
        //     // height: $navbar-height*0.55;
        //     //A flex row container will honor it's height
        display: flex;
        justify-content: center;
        align-items: center;
        // align-self: center;
        text-align: center;
        // justify-self: center;
        margin: 0 auto;

        //     // display: inline;
        width: 100%;
        height: 100%;
        max-width: 300px;

        //     flex: 2 1;

        @include desktop {
            margin: 0 0 0 20px;
        }

    }

    #navbar {
        //This allows us to fool flexlayout into having the ul with width 100%
        display: flex;
        font-size: 1.05rem;
        justify-content: center;
        width: 100%;


        //font-weight: 600;


        @include desktop {
            display: block;
            width: auto; //important or it will try to take 100% of navbar
            // justify-content: flex-end;
        }

        //can't use flex wrap as li are set to fit content, aka no width:100%;

    }

    ul#links {

        display: flex;
        flex-direction: column;
        width: 35vw;
        align-items: center;


        list-style: none;
        //margin: 10px auto;
        padding: 0;


        @include desktop() {
            flex-direction: row;
            justify-content: space-around;

            // margin: 0px 0px 0px 0px;
            // margin-block-end: 0px;
            // margin-block-start: 0px;
        }
    }

    li {
        flex: 1 0 auto;
        // flex: 55%;
        font-family: Geneva, Verdana, sans-serif;
        // font-size: 1.25rem;
        // align-self: stretch;
        // height: 100%;
        // padding: 0px 2rem;
    }

}


#hero-cta {
    //A flew container with horizontal center will not fill width
    //add flex-grow to counter this
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;

    form {
        position: relative;
        display: flex;
        // flex-direction: column;
        // align-items: center; // background: gray;
        justify-content: center; // flex-wrap: wrap; //one line
    }


    #email-cta {
        align-self: auto;
        flex: 1 1 65%;
        // @include/ nox
    }

    input {
        display: flex;
        // height: calc(1.5em + 1rem + 2px);
        flex: 65%;
        padding: 0.5rem 1rem;
        // width: 1%;
        font-size: 1rem;
        border: 1px solid #ced4da;
        margin: 0;
        // overflow: visible;
        align-self: center;


    }

    $btn-color: hsl(148, 100%, 20%);
    $btn-color2: hsl(148, 100%, 20%);

    button {
        background: $btn-color;
        border: 1px solid $btn-color;
        color: white;
        border-radius: 2px;
        padding: 0.5rem 1rem;
        font-size: 1rem;
        align-self: center;
        flex: 1 1 35%;
        // width: 30%;
        // margin-top: 1rem;
        // @include nox
    }

    .form-vertical {
        button {
            margin-top: 1rem;
        }

        flex-direction: column;
    }
}


#features {
    // justify-content: center;
    // align-items: center;
    display: block;
    margin: auto;
    // margin: auto;

    ul.grid {
        display: flex;
        flex-direction: column;
        align-items: center;
        list-style: none;
    }

    li.row {
        display: flex;
        align-items: center;
        justify-content: stretch;
    }


    .icon {
        padding-left: 1rem;
        padding-right: 0.5rem;

        //Allow shrinking and do not take more than the given width
        //Equivalent to:
        //width: 20% or 20vw;
        flex: 0 1 20%;
    }


    .card {
        padding: 0px 1rem;

        //Allow shrinking and do not take more than the given width
        //Equivalent to:
        //width: 20% or 20vw;
        flex: 0 1 80%;
    }

}

.padded-y {
    padding-top: .5rem;
    padding-bottom: .5rem;
}





.video-wrap {

    // display: flex;
    // justify-content: center;
    padding: 2px 0px;

    iframe {
        height: 360px;
        width: 100%;
        max-width: 560px;
    }
}



@each $size in 'x1',
'x2',
'x3' {
    $last: 1.1rem;

    .text-#{$size} {
        font-size: $last + 0.05;
    }
}